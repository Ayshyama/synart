version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: synart_postgres
    environment:
      POSTGRES_USER: synart_user
      POSTGRES_PASSWORD: synart_password
      POSTGRES_DB: synart_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "synart_user"]
      interval: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: synart_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      API_TOKEN: ${API_TOKEN}
      BACKEND_URL: ${BACKEND_URL}
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: synart_frontend
    environment:
      VITE_BACKEND_URL: ${BACKEND_URL}
    env_file:
      - .env
    ports:
      - "5173:80"
    depends_on:
      - backend

  telegram_bot:
    build:
      context: .
      dockerfile: telegram_bot/Dockerfile
    container_name: synart_telegram_bot
    environment:
      API_TOKEN: ${API_TOKEN}
      BACKEND_URL: ${BACKEND_URL}
    env_file:
      - .env
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    container_name: synart_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - /etc/letsencrypt:/etc/letsencrypt:rw
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
